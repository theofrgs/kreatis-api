version: '3.8'
services:
  api:
    container_name: replica_api_dev
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${API_PORT}:${API_PORT}'
    env_file:
      - ./.env
    environment:
      - DB_HOST=database
    volumes:
      - ./src:/usr/src/app/src
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: 'wget -q --spider http://localhost:${API_PORT}/health || exit 1'
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 5s
    networks:
      - default

  database:
    image: mariadb:latest
    restart: always
    container_name: replica-database-container
    ports:
      - '${DB_PORT}:${DB_PORT}'
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_INIT_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - ./data:/var/lib/mysql
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-u${DB_INIT_ROOT_USER}',
          '-p${DB_INIT_ROOT_PASSWORD}',
        ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - default

  redis:
    image: 'redis:latest'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

# postman:
#   image: postman/newman
#   container_name: replica-postman
#   volumes:
#     - ./:/etc/newman
#   command: run replica.postman_collection.json
#   depends_on:
#     api:
#       condition: service_healthy

# prod:
#   image: replica/replica-api-qa:latest
#   container_name: replica-api-prod
#   ports:
#     - "${API_PORT}:${API_PORT}"
#   environment:
#     NODE_ENV: production
#   healthcheck:
#     test: ["CMD", "curl", "--fail", "http://localhost:3000/health"]
#     interval: 10s
#     timeout: 5s
#     retries: 3

networks:
  default:
    driver: bridge
